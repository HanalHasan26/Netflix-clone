{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\WebDevelopment\\\\sample\\\\netflix\\\\netflix\\\\src\\\\Components\\\\Rowpost\\\\RowPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Youtube from 'react-youtube';\nimport './RowPost.css';\nimport axios from '../../Axios/Axios';\nimport { API, imageUrl } from '../../Constants/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(_ref) {\n  _s();\n\n  let {\n    title,\n    isSmall,\n    url\n  } = _ref;\n  const [movie, setMovie] = useState([]);\n  const [urlId, setUrlId] = useState('');\n  useEffect(() => {\n    axios.get(url).then(response => {\n      setMovie(response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '3',\n    width: '100%',\n    playerVars: {\n      autoplay: 0\n    }\n  };\n\n  const handleClicked = id => {\n    axios.get(`/movie/${id}/videos?api_key=${API}&language=en-US`).then(response => {\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[0]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movie.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          handleClicked(obj.id);\n        },\n        className: isSmall ? 'smallposter' : 'poster',\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), urlId && /*#__PURE__*/_jsxDEV(Youtube, {\n      opts: opts,\n      videoId: urlId.key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RowPost, \"ZQ18RaBQImNPS/hrck0jqKQLHVg=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","Youtube","axios","API","imageUrl","RowPost","title","isSmall","url","movie","setMovie","urlId","setUrlId","get","then","response","data","results","opts","height","width","playerVars","autoplay","handleClicked","id","length","map","obj","backdrop_path","key"],"sources":["C:/Users/ACER/Desktop/WebDevelopment/sample/netflix/netflix/src/Components/Rowpost/RowPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Youtube from 'react-youtube'\r\nimport './RowPost.css'\r\nimport axios from '../../Axios/Axios'\r\nimport {  API, imageUrl } from '../../Constants/Constants'\r\nfunction RowPost({title,isSmall,url}) {\r\nconst [movie, setMovie] = useState([])\r\nconst [urlId, setUrlId] = useState('')\r\n  useEffect(() => {\r\n    axios.get(url).then((response)=>{\r\n      setMovie(response.data.results)\r\n    })\r\n},[])\r\n\r\nconst opts = {\r\n  height: '3',\r\n  width: '100%',\r\n  playerVars: {\r\n    autoplay: 0,\r\n  },\r\n};\r\n\r\nconst handleClicked = (id)=>{\r\n  axios.get(`/movie/${id}/videos?api_key=${API}&language=en-US`).then(response=>{\r\n      if(response.data.results.length!==0){\r\n        setUrlId(response.data.results[0])\r\n      }\r\n  })\r\n}\r\n\r\n  return (\r\n    <div className='row'>\r\n        <h2 className=\"title\">{title}</h2>\r\n        <div className=\"posters\">\r\n            {movie.map((obj)=>\r\n            <img onClick={()=>{\r\n              handleClicked(obj.id)\r\n            }} className={isSmall ? 'smallposter':'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"poster\"/>\r\n            )}\r\n        </div>\r\n        {urlId &&<Youtube opts={opts} videoId={urlId.key} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowPost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,2BAA/B;;;AACA,SAASC,OAAT,OAAsC;EAAA;;EAAA,IAArB;IAACC,KAAD;IAAOC,OAAP;IAAeC;EAAf,CAAqB;EACtC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;EACED,SAAS,CAAC,MAAM;IACdG,KAAK,CAACW,GAAN,CAAUL,GAAV,EAAeM,IAAf,CAAqBC,QAAD,IAAY;MAC9BL,QAAQ,CAACK,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAR;IACD,CAFD;EAGH,CAJU,EAIT,EAJS,CAAT;EAMF,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,GADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,UAAU,EAAE;MACVC,QAAQ,EAAE;IADA;EAHD,CAAb;;EAQA,MAAMC,aAAa,GAAIC,EAAD,IAAM;IAC1BtB,KAAK,CAACW,GAAN,CAAW,UAASW,EAAG,mBAAkBrB,GAAI,iBAA7C,EAA+DW,IAA/D,CAAoEC,QAAQ,IAAE;MAC1E,IAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBQ,MAAtB,KAA+B,CAAlC,EAAoC;QAClCb,QAAQ,CAACG,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAR;MACD;IACJ,CAJD;EAKD,CAND;;EAQE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAI,SAAS,EAAC,OAAd;MAAA,UAAuBX;IAAvB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,SAAf;MAAA,UACKG,KAAK,CAACiB,GAAN,CAAWC,GAAD,iBACX;QAAK,OAAO,EAAE,MAAI;UAChBJ,aAAa,CAACI,GAAG,CAACH,EAAL,CAAb;QACD,CAFD;QAEG,SAAS,EAAEjB,OAAO,GAAG,aAAH,GAAiB,QAFtC;QAEgD,GAAG,EAAG,GAAEH,QAAQ,GAACuB,GAAG,CAACC,aAAc,EAFnF;QAEsF,GAAG,EAAC;MAF1F;QAAA;QAAA;QAAA;MAAA,QADC;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ,EASKjB,KAAK,iBAAG,QAAC,OAAD;MAAS,IAAI,EAAEO,IAAf;MAAqB,OAAO,EAAEP,KAAK,CAACkB;IAApC;MAAA;MAAA;MAAA;IAAA,QATb;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAtCQxB,O;;KAAAA,O;AAwCT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}